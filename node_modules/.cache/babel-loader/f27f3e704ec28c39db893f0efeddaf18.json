{"ast":null,"code":"var _jsxFileName = \"/home/dci-pc-ubuntu55/Desktop/crudoperationwzreact1/src/components/TransactionList.js\";\nimport React, { Component } from \"react\";\nimport TransactionForm from \"./TransactionForm\";\n\nclass TransactionList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //list: []\n      list: this.returnList(),\n      currentIndex: -1\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onAddOrEdit(this.state);\n    };\n\n    this.onAddOrEdit = data => {\n      let list = this.returnList();\n      if (this.state.currentIndex === -1) list.push(data); //to make the update func work\n      else list[this.state.currentIndex] = data;\n      localStorage.setItem(\"transactions\", JSON.stringify(list)); //to make the update func work\n\n      this.setState({\n        list: list,\n        currentIndex: -1 //after submit to return the placeholders\n\n      });\n    };\n\n    this.handleEdit = a => {\n      this.setState({\n        currentIndex: a\n      });\n    };\n\n    this.handleDelete = a => {\n      let list = this.returnList();\n      list.splice(a, 1);\n      localStorage.setItem(\"transactions\", JSON.stringify(list)); //to make the update func work\n\n      this.setState({\n        list: list,\n        currentIndex: -1 //after submit to return the placeholders\n\n      });\n    };\n  }\n\n  //from array change it to normal func, to avoid error\n  returnList() {\n    if (localStorage.getItem(\"transactions\") == null) localStorage.setItem(\"transactions\", JSON.stringify([]));\n    return JSON.parse(localStorage.getItem(\"transactions\"));\n  } //function on add & edit linked to transactionForm\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TransactionForm, {\n      onAddOrEdit: this.onAddOrEdit,\n      currentIndex: this.state.currentIndex //for edit purpose\n      ,\n      list: this.state.list //for edit purpose to be exported to form\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.list.map((item, a) => {\n      return React.createElement(\"tr\", {\n        key: a,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, item.benAcctNo), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, item.iFSCode), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, item.benName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, item.amount), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"edit\",\n        onClick: () => this.handleEdit(a),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: () => this.handleDelete(a),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Delete\")));\n    }))));\n  }\n\n}\n\nexport default TransactionList;","map":{"version":3,"sources":["/home/dci-pc-ubuntu55/Desktop/crudoperationwzreact1/src/components/TransactionList.js"],"names":["React","Component","TransactionForm","TransactionList","state","list","returnList","currentIndex","handleSubmit","e","preventDefault","props","onAddOrEdit","data","push","localStorage","setItem","JSON","stringify","setState","handleEdit","a","handleDelete","splice","getItem","parse","render","map","item","benAcctNo","iFSCode","benName","amount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TransactionForm from \"./TransactionForm\";\n\nclass TransactionList extends Component {\n  state = {\n    //list: []\n    list: this.returnList(),\n    currentIndex: -1\n  };\n  //addOrEdit function from transactionList\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddOrEdit(this.state);\n  };\n  //from array change it to normal func, to avoid error\n  returnList() {\n    if (localStorage.getItem(\"transactions\") == null)\n      localStorage.setItem(\"transactions\", JSON.stringify([]));\n    return JSON.parse(localStorage.getItem(\"transactions\"));\n  }\n  //function on add & edit linked to transactionForm\n  onAddOrEdit = data => {\n    let list = this.returnList();\n    if (this.state.currentIndex === -1) list.push(data);\n    //to make the update func work\n    else list[this.state.currentIndex] = data;\n    localStorage.setItem(\"transactions\", JSON.stringify(list)); //to make the update func work\n    this.setState({\n      list: list,\n      currentIndex: -1 //after submit to return the placeholders\n    });\n  };\n  //handle edit function\n  handleEdit = a => {\n    this.setState({\n      currentIndex: a\n    });\n  };\n  //handle delete function\n  handleDelete = a => {\n    let list = this.returnList();\n    list.splice(a, 1);\n    localStorage.setItem(\"transactions\", JSON.stringify(list)); //to make the update func work\n    this.setState({\n      list: list,\n      currentIndex: -1 //after submit to return the placeholders\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <TransactionForm\n          onAddOrEdit={this.onAddOrEdit}\n          currentIndex={this.state.currentIndex} //for edit purpose\n          list={this.state.list} //for edit purpose to be exported to form\n        />\n        <hr />\n        <table>\n          <tbody>\n            {this.state.list.map((item, a) => {\n              return (\n                <tr key={a}>\n                  <td>{item.benAcctNo}</td>\n                  <td>{item.iFSCode}</td>\n                  <td>{item.benName}</td>\n                  <td>{item.amount}</td>\n                  <td>\n                    <button className=\"edit\" onClick={() => this.handleEdit(a)}>\n                      Edit\n                    </button>\n                    <button onClick={() => this.handleDelete(a)}>Delete</button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}