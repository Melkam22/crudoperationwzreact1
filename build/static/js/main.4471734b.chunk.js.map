{"version":3,"sources":["components/TransactionForm.js","components/TransactionList.js","App.js","index.js"],"names":["TransactionForm","state","EditStateFunction","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","props","onAddOrEdit","this","currentIndex","benAcctNo","iFSCode","benName","amount","list","prevProps","length","onSubmit","autoComplete","className","placeholder","onChange","type","Component","TransactionList","returnList","data","push","localStorage","setItem","JSON","stringify","handleEdit","a","handleDelete","splice","getItem","parse","map","item","key","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4471734b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TransactionForm extends Component {\n  /* state = {\n    benAcctNo: \"\",\n    iFSCode: \"\",\n    benName: \"\",\n    amount: \"\"\n  }; */\n  //replace the previous state with the below and use spread function\n  state = {\n    ...this.EditStateFunction()\n  };\n  //EditStateFunction in relation to transactionForm in trans-list page, change the state structure\n  EditStateFunction() {\n    if (this.props.currentIndex === -1)\n      return {\n        benAcctNo: \"\",\n        iFSCode: \"\",\n        benName: \"\",\n        amount: \"\"\n      };\n    else return this.props.list[this.props.currentIndex];\n  }\n  //to update elements if there is only changes in the input fields\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.currentIndex != this.props.currentIndex ||\n      prevProps.list.length != this.props.list.length\n    )\n      this.setState({\n        ...this.EditStateFunction()\n      });\n  }\n\n  //handle function for each input content\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  //addOrEdit function from transactionList\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddOrEdit(this.state);\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\" className=\"form\">\n          <h2>Order Form:</h2>\n          <input\n            className=\"input\"\n            name=\"benAcctNo\"\n            placeholder=\"Account Number\"\n            value={this.state.benAcctNo}\n            onChange={this.handleInputChange}\n          />{\" \"}\n          <br />\n          {/*  */}\n          <input\n            className=\"input\"\n            name=\"iFSCode\"\n            placeholder=\"iFSCode\"\n            value={this.state.iFSCode}\n            onChange={this.handleInputChange}\n          />{\" \"}\n          <br />\n          {/*  */}\n          <input\n            className=\"input\"\n            name=\"benName\"\n            placeholder=\"Clients Name\"\n            value={this.state.benName}\n            onChange={this.handleInputChange}\n          />{\" \"}\n          <br />\n          {/*  */}\n          <input\n            className=\"input\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            value={this.state.amount}\n            onChange={this.handleInputChange}\n          />{\" \"}\n          <br />\n          {/*  */}\n          <button type=\"submit\" className=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default TransactionForm;\n","import React, { Component } from \"react\";\nimport TransactionForm from \"./TransactionForm\";\n\nclass TransactionList extends Component {\n  state = {\n    //list: []\n    list: this.returnList(),\n    currentIndex: -1\n  };\n  //addOrEdit function from transactionList\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddOrEdit(this.state);\n  };\n  //from array change it to normal func, to avoid error\n  returnList() {\n    if (localStorage.getItem(\"transactions\") == null)\n      localStorage.setItem(\"transactions\", JSON.stringify([]));\n    return JSON.parse(localStorage.getItem(\"transactions\"));\n  }\n  //function on add & edit linked to transactionForm\n  onAddOrEdit = data => {\n    let list = this.returnList();\n    if (this.state.currentIndex === -1) list.push(data);\n    //to make the update func work\n    else list[this.state.currentIndex] = data;\n    localStorage.setItem(\"transactions\", JSON.stringify(list)); //to make the update func work\n    this.setState({\n      list: list,\n      currentIndex: -1 //after submit to return the placeholders\n    });\n  };\n  //handle edit function\n  handleEdit = a => {\n    this.setState({\n      currentIndex: a\n    });\n  };\n  //handle delete function\n  handleDelete = a => {\n    let list = this.returnList();\n    list.splice(a, 1);\n    localStorage.setItem(\"transactions\", JSON.stringify(list)); //to make the update func work\n    this.setState({\n      list: list,\n      currentIndex: -1 //after submit to return the placeholders\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <TransactionForm\n          onAddOrEdit={this.onAddOrEdit}\n          currentIndex={this.state.currentIndex} //for edit purpose\n          list={this.state.list} //for edit purpose to be exported to form\n        />\n        <hr />\n        <table>\n          <tbody>\n            {this.state.list.map((item, a) => {\n              return (\n                <tr key={a} className=\"frame\">\n                  <td className=\"one\">{item.benAcctNo}</td>\n                  <td className=\"two\">{item.iFSCode}</td>\n                  <td className=\"three\">{item.benName}</td>\n                  <td className=\"four\">{item.amount}</td>\n                  <td>\n                    <button className=\"edit\" onClick={() => this.handleEdit(a)}>\n                      Edit\n                    </button>\n                    <button\n                      className=\"dlt\"\n                      onClick={() => this.handleDelete(a)}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default TransactionList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TransactionList from \"./components/TransactionList\";\n//import TransactionForm from \"./components/TransactionForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TransactionList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}